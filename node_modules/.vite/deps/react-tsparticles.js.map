{
  "version": 3,
  "sources": ["../../fast-deep-equal/react.js", "../../react-tsparticles/esm/Particles.js", "../../tsparticles-engine/esm/Utils/EventDispatcher.js", "../../tsparticles-engine/esm/Core/Utils/Vector3d.js", "../../tsparticles-engine/esm/Core/Utils/Vector.js", "../../tsparticles-engine/esm/Utils/NumberUtils.js", "../../tsparticles-engine/esm/Utils/Utils.js", "../../tsparticles-engine/esm/Utils/ColorUtils.js", "../../tsparticles-engine/esm/Utils/CanvasUtils.js", "../../tsparticles-engine/esm/Core/Utils/Constants.js", "../../tsparticles-engine/esm/Core/Canvas.js", "../../tsparticles-engine/esm/Core/Utils/EventListeners.js", "../../tsparticles-engine/esm/Core/Utils/FrameManager.js", "../../tsparticles-engine/esm/Options/Classes/OptionsColor.js", "../../tsparticles-engine/esm/Options/Classes/Background/Background.js", "../../tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js", "../../tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js", "../../tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js", "../../tsparticles-engine/esm/Options/Classes/ManualParticle.js", "../../tsparticles-engine/esm/Options/Classes/Motion/MotionReduce.js", "../../tsparticles-engine/esm/Options/Classes/Motion/Motion.js", "../../tsparticles-engine/esm/Options/Classes/Responsive.js", "../../tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js", "../../tsparticles-engine/esm/Options/Classes/Theme/Theme.js", "../../tsparticles-engine/esm/Options/Classes/ColorAnimation.js", "../../tsparticles-engine/esm/Options/Classes/HslAnimation.js", "../../tsparticles-engine/esm/Options/Classes/AnimatableColor.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js", "../../tsparticles-engine/esm/Options/Classes/Random.js", "../../tsparticles-engine/esm/Options/Classes/ValueWithRandom.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePathDelay.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js", "../../tsparticles-engine/esm/Options/Classes/AnimationOptions.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Rotate/RotateAnimation.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Rotate/Rotate.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Shadow.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Stroke.js", "../../tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js", "../../tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js", "../../tsparticles-engine/esm/Utils/OptionsUtils.js", "../../tsparticles-engine/esm/Options/Classes/Options.js", "../../tsparticles-engine/esm/Core/Utils/InteractionManager.js", "../../tsparticles-engine/esm/Core/Particle.js", "../../tsparticles-engine/esm/Core/Utils/Point.js", "../../tsparticles-engine/esm/Core/Utils/Range.js", "../../tsparticles-engine/esm/Core/Utils/Circle.js", "../../tsparticles-engine/esm/Core/Utils/Rectangle.js", "../../tsparticles-engine/esm/Core/Utils/QuadTree.js", "../../tsparticles-engine/esm/Core/Particles.js", "../../tsparticles-engine/esm/Core/Retina.js", "../../tsparticles-engine/esm/Core/Container.js", "../../tsparticles-engine/esm/Core/Loader.js", "../../tsparticles-engine/esm/Core/Utils/Plugins.js", "../../tsparticles-engine/esm/engine.js", "../../tsparticles-engine/esm/Utils/HslColorManager.js", "../../tsparticles-engine/esm/Utils/RgbColorManager.js", "../../tsparticles-engine/esm/index.js", "../../react-tsparticles/esm/index.js", "dep:react-tsparticles"],
  "sourcesContent": ["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport equal from \"fast-deep-equal/react\";\nconst defaultId = \"tsparticles\";\nexport default class Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        return !equal(nextProps, this.props);\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: Object.assign(Object.assign({}, this.props.style), { width,\n                    height }) })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        var _a, _b, _c;\n        if (!this.state.init) {\n            return;\n        }\n        const cb = async (container) => {\n            if (this.props.container) {\n                this.props.container.current = container;\n            }\n            this.setState({\n                library: container,\n            });\n            if (this.props.loaded) {\n                await this.props.loaded(container);\n            }\n        };\n        const id = (_b = (_a = this.props.id) !== null && _a !== void 0 ? _a : Particles.defaultProps.id) !== null && _b !== void 0 ? _b : defaultId, container = this.props.url\n            ? await tsParticles.loadJSON(id, this.props.url)\n            : await tsParticles.load(id, (_c = this.props.params) !== null && _c !== void 0 ? _c : this.props.options);\n        await cb(container);\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\n", "export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        var _a;\n        this.removeEventListener(type, listener);\n        if (!this._listeners.get(type)) {\n            this._listeners.set(type, []);\n        }\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.push(listener);\n    }\n    dispatchEvent(type, args) {\n        var _a;\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n", "export class Vector3d {\n    constructor(xOrCoords, y, z) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z !== null && z !== void 0 ? z : 0;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n", "import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n", "import { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return typeof value === \"number\" ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return typeof value === \"number\" ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return typeof value === \"number\" ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && typeof source === \"number\")) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = typeof random === \"boolean\"\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (typeof direction === \"number\") {\n        return (direction * Math.PI) / 180;\n    }\n    else {\n        switch (direction) {\n            case \"top\":\n                return -Math.PI / 2;\n            case \"top-right\":\n                return -Math.PI / 4;\n            case \"right\":\n                return 0;\n            case \"bottom-right\":\n                return Math.PI / 4;\n            case \"bottom\":\n                return Math.PI / 2;\n            case \"bottom-left\":\n                return (3 * Math.PI) / 4;\n            case \"left\":\n                return Math.PI;\n            case \"top-left\":\n                return (-3 * Math.PI) / 4;\n            case \"inside\":\n                return Math.atan2(center.y - position.y, center.x - position.x);\n            case \"outside\":\n                return Math.atan2(position.y - center.y, position.x - center.x);\n            case \"none\":\n            default:\n                return getRandom() * Math.PI * 2;\n        }\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcEasing(value, type) {\n    switch (type) {\n        case \"ease-in-quad\":\n            return value ** 2;\n        case \"ease-out-quad\":\n            return 1 - (1 - value) ** 2;\n        case \"ease-in-out-quad\":\n            return value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2;\n        case \"ease-in-cubic\":\n            return value ** 3;\n        case \"ease-out-cubic\":\n            return 1 - (1 - value) ** 3;\n        case \"ease-in-out-cubic\":\n            return value < 0.5 ? 4 * value ** 3 : 1 - (-2 * value + 2) ** 3 / 2;\n        case \"ease-in-quart\":\n            return value ** 4;\n        case \"ease-out-quart\":\n            return 1 - (1 - value) ** 4;\n        case \"ease-in-out-quart\":\n            return value < 0.5 ? 8 * value ** 4 : 1 - (-2 * value + 2) ** 4 / 2;\n        case \"ease-in-quint\":\n            return value ** 5;\n        case \"ease-out-quint\":\n            return 1 - (1 - value) ** 5;\n        case \"ease-in-out-quint\":\n            return value < 0.5 ? 16 * value ** 5 : 1 - (-2 * value + 2) ** 5 / 2;\n        case \"ease-in-expo\":\n            return !value ? 0 : 2 ** (10 * value - 10);\n        case \"ease-out-expo\":\n            return value === 1 ? 1 : 1 - Math.pow(2, -10 * value);\n        case \"ease-in-out-expo\":\n            return !value\n                ? 0\n                : value === 1\n                    ? 1\n                    : value < 0.5\n                        ? 2 ** (20 * value - 10) / 2\n                        : (2 - 2 ** (-20 * value + 10)) / 2;\n        case \"ease-in-sine\":\n            return 1 - Math.cos((value * Math.PI) / 2);\n        case \"ease-out-sine\":\n            return Math.sin((value * Math.PI) / 2);\n        case \"ease-in-out-sine\":\n            return -(Math.cos(Math.PI * value) - 1) / 2;\n        case \"ease-in-back\": {\n            const c1 = 1.70158, c3 = c1 + 1;\n            return c3 * value ** 3 - c1 * value ** 2;\n        }\n        case \"ease-out-back\": {\n            const c1 = 1.70158, c3 = c1 + 1;\n            return 1 + c3 * Math.pow(value - 1, 3) + c1 * Math.pow(value - 1, 2);\n        }\n        case \"ease-in-out-back\": {\n            const c1 = 1.70158, c2 = c1 * 1.525;\n            return value < 0.5\n                ? ((2 * value) ** 2 * ((c2 + 1) * 2 * value - c2)) / 2\n                : ((2 * value - 2) ** 2 * ((c2 + 1) * (value * 2 - 2) + c2) + 2) / 2;\n        }\n        case \"ease-in-circ\":\n            return 1 - Math.sqrt(1 - value ** 2);\n        case \"ease-out-circ\":\n            return Math.sqrt(1 - (value - 1) ** 2);\n        case \"ease-in-out-circ\":\n            return value < 0.5\n                ? (1 - Math.sqrt(1 - (2 * value) ** 2)) / 2\n                : (Math.sqrt(1 - (-2 * value + 2) ** 2) + 1) / 2;\n        default:\n            return value;\n    }\n}\nexport function calcPositionFromSize(data) {\n    var _a, _b;\n    return ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined && ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (((_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * 100) * data.size.width) / 100,\n        y: (((_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * data.size.width,\n        y: (_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input);\n}\n", "import { collisionVelocity, getDistances, getRandom, getValue } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = { bounced: false };\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return res instanceof Array ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function animate() {\n    return isSsr()\n        ? (callback) => setTimeout(callback)\n        : (callback) => (requestAnimationFrame || setTimeout)(callback);\n}\nexport function cancelAnimation() {\n    return isSsr()\n        ? (handle) => clearTimeout(handle)\n        : (handle) => (cancelAnimationFrame || clearTimeout)(handle);\n}\nexport function isInArray(value, array) {\n    return value === array || (array instanceof Array && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight !== null && weight !== void 0 ? weight : \"400\"} 36px '${font !== null && font !== void 0 ? font : \"Verdana\"}'`);\n    }\n    catch (_a) {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    const fixedIndex = index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array);\n    return array[fixedIndex];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (typeof source !== \"object\") {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], isObject = typeof value === \"object\", destDict = destination;\n            destDict[key] =\n                isObject && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, particle.velocity.x, getValue(particle.options.bounce.horizontal));\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, particle.velocity.y, getValue(particle.options.bounce.vertical));\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.map((item) => callback(item)) : callback(obj);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return obj instanceof Array ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.find((t) => callback(t)) : callback(obj) ? obj : undefined;\n}\n", "import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(key, manager) {\n    colorManagers.set(key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (color.value instanceof Array) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (color.value instanceof Array) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    var _a;\n    return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor(), destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = 0;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n", "import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.save();\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n    context.restore();\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition();\n    context.save();\n    if (transform.a !== undefined ||\n        transform.b !== undefined ||\n        transform.c !== undefined ||\n        transform.d !== undefined) {\n        context.setTransform((_a = transform.a) !== null && _a !== void 0 ? _a : 1, (_b = transform.b) !== null && _b !== void 0 ? _b : 0, (_c = transform.c) !== null && _c !== void 0 ? _c : 0, (_d = transform.d) !== null && _d !== void 0 ? _d : 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    context.beginPath();\n    const angle = particle.rotation + (particle.options.rotate.path ? particle.velocity.angle : 0);\n    if (angle !== 0) {\n        context.rotate(angle);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const stroke = particle.stroke;\n    context.lineWidth = (_e = particle.strokeWidth) !== null && _e !== void 0 ? _e : 0;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (((_f = stroke === null || stroke === void 0 ? void 0 : stroke.width) !== null && _f !== void 0 ? _f : 0) > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    context.restore();\n    context.save();\n    if (transform.a !== undefined ||\n        transform.b !== undefined ||\n        transform.c !== undefined ||\n        transform.d !== undefined) {\n        context.setTransform((_g = transform.a) !== null && _g !== void 0 ? _g : 1, (_h = transform.b) !== null && _h !== void 0 ? _h : 0, (_j = transform.c) !== null && _j !== void 0 ? _j : 0, (_k = transform.d) !== null && _k !== void 0 ? _k : 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    if (particle.rotation) {\n        context.rotate(particle.rotation);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.restore();\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    context.save();\n    plugin.draw(context, delta);\n    context.restore();\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    context.save();\n    plugin.drawParticle(context, particle, delta);\n    context.restore();\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n", "export const generatedAttribute = \"generated\";\nexport const touchEndEvent = \"touchend\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchMoveEvent = \"touchmove\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\n", "import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generatedCanvas = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this._trailFillColor) {\n            this._paintBase(getStyleFromRgb(this._trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a;\n        if (this._generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d, _e;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_e = (_d = particle.stroke) === null || _d === void 0 ? void 0 : _d.opacity) !== null && _e !== void 0 ? _e : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    init() {\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        this._initTrail();\n        this.initBackground();\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this._generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generatedCanvas =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generatedCanvas;\n        this.element = canvas;\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        var _a;\n        for (const plugin of this._resizePlugins) {\n            (_a = plugin.resize) === null || _a === void 0 ? void 0 : _a.call(plugin);\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (options.fullScreen.enable) {\n            this._originalStyle = deepExtend({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this._trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (element && originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n}\n", "import { executeOnSingleOrMultiple, isSsr } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.themeChangeHandler = (e) => this.handleThemeChange(e);\n        this.oldThemeChangeHandler = (e) => this.handleThemeChange(e);\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            container.interactivity.mouse.clickPosition = Object.assign({}, mousePos);\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            executeOnSingleOrMultiple(onClick.mode, (mode) => this.handleClickMode(mode));\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, themeName = mediaEvent.matches\n            ? this.container.options.defaultDarkTheme\n            : this.container.options.defaultLightTheme, theme = this.container.options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            this.container.loadTheme(themeName);\n        }\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, 500);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveTmpEvent = mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveTmpEvent = mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = !isSsr() && typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", this.themeChangeHandler, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(this.oldThemeChangeHandler);\n                }\n                else {\n                    mediaMatch.removeListener(this.oldThemeChangeHandler);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, resizeEvent, this.resizeHandler, add);\n            }\n        }\n        if (document) {\n            manageListener(document, visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"pointer\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target, target = mouseEvent.currentTarget, canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else if (mouseEvent.target === container.canvas.element) {\n                pos = {\n                    x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                    y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                };\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = mouseMoveEvent;\n    }\n}\n", "function initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nexport class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    async nextFrame(timestamp) {\n        var _a;\n        try {\n            const container = this.container;\n            if (!container.smooth &&\n                container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw(false);\n                return;\n            }\n            (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : (container.lastFrameTime = timestamp);\n            const delta = initDelta(timestamp - container.lastFrameTime, container.fpsLimit, container.smooth);\n            container.lifeTime += delta.value;\n            container.lastFrameTime = timestamp;\n            if (delta.value > 1000) {\n                container.draw(false);\n                return;\n            }\n            await container.particles.draw(delta);\n            if (container.duration > 0 && container.lifeTime > container.duration) {\n                container.destroy();\n                return;\n            }\n            if (container.getAnimationStatus()) {\n                container.draw(false);\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\n", "export class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n", "export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n", "import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n", "import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n", "import { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = true;\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n        const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n        if (data.resize !== undefined) {\n            this.resize = data.resize;\n        }\n    }\n}\n", "export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (this._container) {\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadModeOptions) {\n                        interactor.loadModeOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n", "import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n", "import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: (_a = data.position.x) !== null && _a !== void 0 ? _a : 50,\n                y: (_b = data.position.y) !== null && _b !== void 0 ? _b : 50,\n            };\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export class MotionReduce {\n    constructor() {\n        this.factor = 4;\n        this.value = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { MotionReduce } from \"./MotionReduce\";\nexport class Motion {\n    constructor() {\n        this.disable = false;\n        this.reduce = new MotionReduce();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.disable !== undefined) {\n            this.disable = data.disable;\n        }\n        this.reduce.load(data.reduce);\n    }\n}\n", "import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n", "import { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n", "export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n", "export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n", "import { Random } from \"./Random\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (typeof data.random === \"boolean\") {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n", "import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n", "import { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nexport class Collisions {\n    constructor() {\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../../ValueWithRandom\";\nexport class MovePathDelay extends ValueWithRandom {\n    constructor() {\n        super();\n    }\n}\n", "import { MovePathDelay } from \"./MovePathDelay\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new MovePathDelay();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fillColor = new OptionsColor();\n        this.fillColor.value = \"#000000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.fillColor = OptionsColor.create(this.fillColor, data.fillColor);\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n", "export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = (_a = data.bottom) !== null && _a !== void 0 ? _a : data.default;\n        this.left = (_b = data.left) !== null && _b !== void 0 ? _b : data.default;\n        this.right = (_c = data.right) !== null && _c !== void 0 ? _c : data.default;\n        this.top = (_d = data.top) !== null && _d !== void 0 ? _d : data.default;\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.position = data.position ? deepExtend({}, data.position) : undefined;\n    }\n}\n", "import { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = {\n            x: 50,\n            y: 50,\n            mode: \"percent\",\n            radius: 0,\n        };\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        this.angle.load(typeof data.angle === \"number\" ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center = deepExtend((_a = this.center) !== null && _a !== void 0 ? _a : {}, data.center);\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : Object.assign({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = (_c = (_b = data.outModes) !== null && _b !== void 0 ? _b : data.outMode) !== null && _c !== void 0 ? _c : data.out_mode;\n        if (outModes !== undefined) {\n            if (typeof outModes === \"object\") {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load((_d = data.path) !== null && _d !== void 0 ? _d : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n", "import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { AnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 2;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n", "export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.area = 800;\n        this.factor = 1000;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const area = (_a = data.area) !== null && _a !== void 0 ? _a : data.value_area;\n        if (area !== undefined) {\n            this.area = area;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n    }\n}\n", "import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 100;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { RotateAnimation } from \"./RotateAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[\"character\"]) !== null && _a !== void 0 ? _a : this.options[\"char\"]);\n    }\n    set character(value) {\n        this.options[\"character\"] = value;\n        this.options[\"char\"] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[\"image\"]) !== null && _a !== void 0 ? _a : this.options[\"images\"]);\n    }\n    set image(value) {\n        this.options[\"image\"] = value;\n        this.options[\"images\"] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[\"polygon\"]) !== null && _a !== void 0 ? _a : this.options[\"star\"]);\n    }\n    set polygon(value) {\n        this.options[\"polygon\"] = value;\n        this.options[\"star\"] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, \"character\", \"char\", true);\n        this.loadShape(data.polygon, \"polygon\", \"star\", false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, \"image\", \"images\", true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b;\n        if (!item) {\n            return;\n        }\n        const isArray = item instanceof Array;\n        const emptyValue = isArray ? [] : {}, mainDifferentValues = isArray !== this.options[mainKey] instanceof Array, altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n        if (mainDifferentValues) {\n            this.options[mainKey] = emptyValue;\n        }\n        if (altDifferentValues && altOverride) {\n            this.options[altKey] = emptyValue;\n        }\n        this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n        if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n        }\n    }\n}\n", "import { AnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 5;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n", "import { AnimatableColor } from \"../AnimatableColor\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n", "import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Rotate } from \"./Rotate/Rotate\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.rotate = new Rotate();\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend((_a = this.groups[group]) !== null && _a !== void 0 ? _a : {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.rotate.load(data.rotate);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = (_c = (_b = data.move) === null || _b === void 0 ? void 0 : _b.collisions) !== null && _c !== void 0 ? _c : (_d = data.move) === null || _d === void 0 ? void 0 : _d.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = (_e = data.stroke) !== null && _e !== void 0 ? _e : (_f = data.shape) === null || _f === void 0 ? void 0 : _f.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n", "import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n", "import { deepExtend, executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Motion } from \"./Motion/Motion\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.motion = new Motion();\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e;\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = (_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode;\n        if (typeof fullScreen === \"boolean\") {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.motion.load(data.motion);\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const optTheme = new Theme();\n                optTheme.load(theme);\n                this.themes.push(optTheme);\n            }\n        }\n        this.defaultDarkTheme = (_d = this._findDefaultTheme(\"dark\")) === null || _d === void 0 ? void 0 : _d.name;\n        this.defaultLightTheme = (_e = this._findDefaultTheme(\"light\")) === null || _e === void 0 ? void 0 : _e.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.options);\n        return responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    _findDefaultTheme(mode) {\n        var _a;\n        return ((_a = this.themes.find((theme) => theme.default.value && theme.default.mode === mode)) !== null && _a !== void 0 ? _a : this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n    }\n    _importPreset(preset) {\n        this.load(this._engine.plugins.getPreset(preset));\n    }\n}\n", "export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = this._engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.handleClickMode) {\n                interactor.handleClickMode(mode);\n            }\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case 0:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case 1:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.reset(particle);\n            }\n        }\n    }\n}\n", "import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Shape } from \"../Options/Classes/Particles/Shape/Shape\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!(isInArray(data.outMode, data.checkModes) || isInArray(data.outMode, data.checkModes))) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        this.id = id;\n        this.container = container;\n        this.group = group;\n        this._engine = engine;\n        this.fill = true;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            }\n            const shapeOptions = new Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n            }\n        }\n        else {\n            this.shapeData = this._loadShapeData(particlesOptions.shape, reduceDuplicates);\n        }\n        particlesOptions.load(overrideOptions);\n        particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n        this.interactivity = new Interactivity(engine, container);\n        this.interactivity.load(container.actualOptions.interactivity);\n        this.interactivity.load(particlesOptions.interactivity);\n        this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n        this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value, sizeAnimation = sizeOptions.animation;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        if (sizeAnimation.enable) {\n            this.size.status = 0;\n            this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = 0;\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size) * pxRatio;\n                    this.size.status = getRandom() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = 1;\n                    break;\n            }\n            this.size.velocity =\n                (((_f = this.retina.sizeAnimationSpeed) !== null && _f !== void 0 ? _f : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= getRandom();\n            }\n        }\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        const canvasSize = container.canvas.size, moveCenter = this.options.move.center, isCenterPercent = moveCenter.mode === \"percent\";\n        this.moveCenter = {\n            x: ((_g = moveCenter.x) !== null && _g !== void 0 ? _g : 50) * (isCenterPercent ? canvasSize.width / 100 : 1),\n            y: ((_h = moveCenter.y) !== null && _h !== void 0 ? _h : 50) * (isCenterPercent ? canvasSize.height / 100 : 1),\n            radius: (_j = this.options.move.center.radius) !== null && _j !== void 0 ? _j : 0,\n            mode: (_k = this.options.move.center.mode) !== null && _k !== void 0 ? _k : \"percent\",\n        };\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n        switch (this.options.move.direction) {\n            case \"inside\":\n                this.outType = \"inside\";\n                break;\n            case \"outside\":\n                this.outType = \"outside\";\n                break;\n        }\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            (_l = updater.init) === null || _l === void 0 ? void 0 : _l.call(updater, this);\n        }\n        for (const mover of container.particles.movers) {\n            (_m = mover.init) === null || _m === void 0 ? void 0 : _m.call(mover, this);\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            (_o = plugin.particleCreated) === null || _o === void 0 ? void 0 : _o.call(plugin, this);\n        }\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of this.container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        if (this.opacity) {\n            this.opacity.loops = 0;\n        }\n        this.size.loops = 0;\n    }\n    _calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this._checkOverlap(pos, tryCount)) {\n            return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    _calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction);\n        const res = baseVelocity.copy();\n        const moveOptions = this.options.move;\n        if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n            return res;\n        }\n        const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value);\n        const radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset);\n        const range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= getRandom();\n        }\n        return res;\n    }\n    _checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    _loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        }\n    }\n}\n", "export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n", "export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n", "import { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const rect = range, circle = range, pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width, h = rect.size.height, edges = Math.pow(distPos.x - w, 2) + Math.pow(distPos.y - h, 2);\n            return edges <= r ** 2 || (distPos.x <= r + w && distPos.y <= r + h) || distPos.x <= w || distPos.y <= h;\n        }\n        return false;\n    }\n}\n", "import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n", "import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    query(range, check, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this.points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this.divided) {\n            (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, check, res);\n            (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, check, res);\n            (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, check, res);\n            (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, check, res);\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n}\n", "import { calcPositionFromSize, getRandom, getRangeMax, getRangeMin, setRangeValue } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        const range = setRangeValue(p1.id, p2.id), key = `${getRangeMin(range)}_${getRangeMax(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = getRandom();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = getRandom();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n", "import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        const motionOptions = this.container.actualOptions.motion;\n        if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n            if (isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n                this.reduceFactor = 1;\n            }\n            else {\n                const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n                if (mediaQuery) {\n                    this._handleMotionChange(mediaQuery);\n                    const handleChange = () => {\n                        this._handleMotionChange(mediaQuery);\n                        container.refresh().catch(() => {\n                        });\n                    };\n                    if (mediaQuery.addEventListener !== undefined) {\n                        mediaQuery.addEventListener(\"change\", handleChange);\n                    }\n                    else if (mediaQuery.addListener !== undefined) {\n                        mediaQuery.addListener(handleChange);\n                    }\n                }\n            }\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n    _handleMotionChange(mediaQuery) {\n        const options = this.container.actualOptions;\n        if (mediaQuery.matches) {\n            const motion = options.motion;\n            this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n    }\n}\n", "import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => {\n        const v = p.velocity.copy();\n        v.angle += (v.length * Math.PI) / 180;\n        return v;\n    },\n    init: () => {\n    },\n    update: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.frameManager = new FrameManager(this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            var _a, _b, _c;\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const canvasRect = (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect(), pos = {\n                    x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                    y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n        return true;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.frameManager.nextFrame(timestamp);\n        });\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, (key, value) => {\n            if (key === \"_engine\" || key === \"_container\") {\n                return;\n            }\n            return value;\n        }, 2);\n    }\n    exportImage(callback, type, quality) {\n        var _a;\n        return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        this.retina.init();\n        this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                plugin.init(this.actualOptions);\n            }\n            else if (plugin.initAsync !== undefined) {\n                await plugin.initAsync(this.actualOptions);\n            }\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup !== undefined) {\n                plugin.particlesSetup();\n            }\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation()(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._options = loadContainerOptions(this._engine, this);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = Object.assign({}, defaultPathGenerator);\n        if (typeof pathOrGenerator === \"function\") {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        this._eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.startAsync !== undefined) {\n                await plugin.startAsync();\n            }\n            else if (plugin.start !== undefined) {\n                plugin.start();\n            }\n        }\n        this._engine.dispatchEvent(\"containerStarted\", { container: this });\n        this.play();\n    }\n    stop() {\n        var _a;\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            (_a = plugin.stop) === null || _a === void 0 ? void 0 : _a.call(plugin);\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n    _intersectionManager(entries) {\n        if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            (entry.isIntersecting ? this.play : this.pause)();\n        }\n    }\n}\n", "import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nfunction fetchError(statusCode) {\n    console.error(`tsParticles - Error ${statusCode} while retrieving config file`);\n}\nasync function getDataFromUrl(jsonUrl, index) {\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\n    if (!url) {\n        return;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    fetchError(response.status);\n}\nexport class Loader {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    load(tagId, options, index) {\n        const params = { index, remote: false };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this._engine.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this._engine, tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index, remote: false };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\n    }\n}\n", "export class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this.interactorsInitializers = new Map();\n        this.moversInitializers = new Map();\n        this.updatersInitializers = new Map();\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this.interactorsInitializers.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this.moversInitializers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this.updatersInitializers.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(type, drawer) {\n        if (!this.getShapeDrawer(type)) {\n            this.drawers.set(type, drawer);\n        }\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        let res = this.interactors.get(container);\n        if (!res || force) {\n            res = [...this.interactorsInitializers.values()].map((t) => t(container));\n            this.interactors.set(container, res);\n        }\n        return res;\n    }\n    getMovers(container, force = false) {\n        let res = this.movers.get(container);\n        if (!res || force) {\n            res = [...this.moversInitializers.values()].map((t) => t(container));\n            this.movers.set(container, res);\n        }\n        return res;\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        let res = this.updaters.get(container);\n        if (!res || force) {\n            res = [...this.updatersInitializers.values()].map((t) => t(container));\n            this.updaters.set(container, res);\n        }\n        return res;\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n", "import { EventDispatcher } from \"./Utils/EventDispatcher\";\nimport { Loader } from \"./Core/Loader\";\nimport { Plugins } from \"./Core/Utils/Plugins\";\nexport class Engine {\n    constructor() {\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this._loader = new Loader(this);\n        this.plugins = new Plugins(this);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh();\n    }\n    async addMover(name, moverInitializer) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh();\n    }\n    async addParticleUpdater(name, updaterInitializer) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh();\n    }\n    async addPathGenerator(name, generator) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh();\n    }\n    async addPlugin(plugin) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh();\n    }\n    async addPreset(preset, options, override = false) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh();\n    }\n    async addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh();\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    init() {\n        if (!this._initialized) {\n            this._initialized = true;\n        }\n    }\n    async load(tagId, options) {\n        return this._loader.load(tagId, options);\n    }\n    async loadFromArray(tagId, options, index) {\n        return this._loader.load(tagId, options, index);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        return this._loader.loadJSON(tagId, pathConfigJson, index);\n    }\n    async refresh() {\n        for (const instance of this.dom()) {\n            await instance.refresh();\n        }\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options) {\n        return this._loader.set(id, element, options);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        return this._loader.setJSON(id, element, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n", "import { Engine } from \"./engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nconst rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\naddColorManager(\"rgb\", rgbColorManager);\naddColorManager(\"hsl\", hslColorManager);\nconst tsParticles = new Engine();\ntsParticles.init();\nexport * from \"./Core/Interfaces/Colors\";\nexport * from \"./Core/Interfaces/IBounds\";\nexport * from \"./Core/Interfaces/IBubbleParticleData\";\nexport * from \"./Core/Interfaces/ICircleBouncer\";\nexport * from \"./Core/Interfaces/IColorManager\";\nexport * from \"./Core/Interfaces/IContainerInteractivity\";\nexport * from \"./Core/Interfaces/IContainerPlugin\";\nexport * from \"./Core/Interfaces/ICoordinates\";\nexport * from \"./Core/Interfaces/IDelta\";\nexport * from \"./Core/Interfaces/IDimension\";\nexport * from \"./Core/Interfaces/IDistance\";\nexport * from \"./Core/Interfaces/IExternalInteractor\";\nexport * from \"./Core/Interfaces/IInteractor\";\nexport * from \"./Core/Interfaces/IMouseData\";\nexport * from \"./Core/Interfaces/IMovePathGenerator\";\nexport * from \"./Core/Interfaces/IParticle\";\nexport * from \"./Core/Interfaces/IParticleColorStyle\";\nexport * from \"./Core/Interfaces/IParticleHslAnimation\";\nexport * from \"./Core/Interfaces/IParticlesInteractor\";\nexport * from \"./Core/Interfaces/IParticleLife\";\nexport * from \"./Core/Interfaces/IParticleRetinaProps\";\nexport * from \"./Core/Interfaces/IParticleRoll\";\nexport * from \"./Core/Interfaces/IParticleTransformValues\";\nexport * from \"./Core/Interfaces/IParticleUpdater\";\nexport * from \"./Core/Interfaces/IParticleValueAnimation\";\nexport * from \"./Core/Interfaces/IParticleWobble\";\nexport * from \"./Core/Interfaces/IParticlesMover\";\nexport * from \"./Core/Interfaces/IPlugin\";\nexport * from \"./Core/Interfaces/IRangeValue\";\nexport * from \"./Core/Interfaces/IRectSideResult\";\nexport * from \"./Core/Interfaces/IShapeDrawer\";\nexport * from \"./Core/Interfaces/IShapeValues\";\nexport * from \"./Core/Interfaces/ISlowParticleData\";\nexport * from \"./Core/Utils/Circle\";\nexport * from \"./Core/Utils/Constants\";\nexport * from \"./Core/Utils/ExternalInteractorBase\";\nexport * from \"./Core/Utils/ParticlesInteractorBase\";\nexport * from \"./Core/Utils/Point\";\nexport * from \"./Core/Utils/Range\";\nexport * from \"./Core/Utils/Rectangle\";\nexport * from \"./Core/Utils/Vector\";\nexport * from \"./Core/Utils/Vector3d\";\nexport * from \"./Enums/Directions/MoveDirection\";\nexport * from \"./Enums/Directions/RotateDirection\";\nexport * from \"./Enums/Directions/OutModeDirection\";\nexport * from \"./Enums/Modes/ClickMode\";\nexport * from \"./Enums/Modes/DivMode\";\nexport * from \"./Enums/Modes/HoverMode\";\nexport * from \"./Enums/Modes/CollisionMode\";\nexport * from \"./Enums/Modes/OutMode\";\nexport * from \"./Enums/Modes/SizeMode\";\nexport * from \"./Enums/Modes/ThemeMode\";\nexport * from \"./Enums/Modes/ResponsiveMode\";\nexport * from \"./Enums/Types/AlterType\";\nexport * from \"./Enums/Types/DestroyType\";\nexport * from \"./Enums/Types/GradientType\";\nexport * from \"./Enums/Types/InteractorType\";\nexport * from \"./Enums/Types/ParticleOutType\";\nexport * from \"./Enums/Types/StartValueType\";\nexport * from \"./Enums/Types/DivType\";\nexport * from \"./Enums/Types/EasingType\";\nexport * from \"./Enums/AnimationStatus\";\nexport * from \"./Enums/InteractivityDetect\";\nexport * from \"./Options/Classes/AnimatableColor\";\nexport * from \"./Options/Classes/AnimationOptions\";\nexport * from \"./Options/Classes/Background/Background\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMask\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMaskCover\";\nexport * from \"./Options/Classes/ColorAnimation\";\nexport * from \"./Options/Classes/FullScreen/FullScreen\";\nexport * from \"./Options/Classes/HslAnimation\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Events\";\nexport * from \"./Options/Classes/Interactivity/Events/HoverEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Parallax\";\nexport * from \"./Options/Classes/Interactivity/Interactivity\";\nexport * from \"./Options/Classes/Interactivity/Modes/Modes\";\nexport * from \"./Options/Classes/ManualParticle\";\nexport * from \"./Options/Classes/Motion/Motion\";\nexport * from \"./Options/Classes/Motion/MotionReduce\";\nexport * from \"./Options/Classes/Options\";\nexport * from \"./Options/Classes/OptionsColor\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounce\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounceFactor\";\nexport * from \"./Options/Classes/Particles/Collisions/Collisions\";\nexport * from \"./Options/Classes/Particles/Collisions/CollisionsOverlap\";\nexport * from \"./Options/Classes/Particles/ParticlesOptions\";\nexport * from \"./Options/Classes/Particles/Shadow\";\nexport * from \"./Options/Classes/Particles/Stroke\";\nexport * from \"./Options/Classes/Particles/Move/MoveAttract\";\nexport * from \"./Options/Classes/Particles/Move/Move\";\nexport * from \"./Options/Classes/Particles/Move/MoveAngle\";\nexport * from \"./Options/Classes/Particles/Move/MoveGravity\";\nexport * from \"./Options/Classes/Particles/Move/OutModes\";\nexport * from \"./Options/Classes/Particles/Move/Path/MovePath\";\nexport * from \"./Options/Classes/Particles/Move/Path/MovePathDelay\";\nexport * from \"./Options/Classes/Particles/Move/Spin\";\nexport * from \"./Options/Classes/Particles/Move/MoveTrail\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesNumber\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesDensity\";\nexport * from \"./Options/Classes/Particles/Opacity/Opacity\";\nexport * from \"./Options/Classes/Particles/Opacity/OpacityAnimation\";\nexport * from \"./Options/Classes/Particles/Rotate/Rotate\";\nexport * from \"./Options/Classes/Particles/Rotate/RotateAnimation\";\nexport * from \"./Options/Classes/Particles/Shape/Shape\";\nexport * from \"./Options/Classes/Particles/Size/Size\";\nexport * from \"./Options/Classes/Particles/Size/SizeAnimation\";\nexport * from \"./Options/Classes/Particles/ZIndex/ZIndex\";\nexport * from \"./Options/Classes/Responsive\";\nexport * from \"./Options/Classes/Theme/Theme\";\nexport * from \"./Options/Classes/Theme/ThemeDefault\";\nexport * from \"./Options/Classes/ValueWithRandom\";\nexport * from \"./Options/Interfaces/Background/IBackground\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMask\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMaskCover\";\nexport * from \"./Options/Interfaces/FullScreen/IFullScreen\";\nexport * from \"./Options/Interfaces/IAnimatable\";\nexport * from \"./Options/Interfaces/IAnimatableColor\";\nexport * from \"./Options/Interfaces/IAnimation\";\nexport * from \"./Options/Interfaces/IColorAnimation\";\nexport * from \"./Options/Interfaces/IHslAnimation\";\nexport * from \"./Options/Interfaces/IManualParticle\";\nexport * from \"./Options/Interfaces/IOptionLoader\";\nexport * from \"./Options/Interfaces/IOptions\";\nexport * from \"./Options/Interfaces/IOptionsColor\";\nexport * from \"./Options/Interfaces/IResponsive\";\nexport * from \"./Options/Interfaces/IValueWithRandom\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IClickEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IDivEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IEvents\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IHoverEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IParallax\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModeDiv\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModes\";\nexport * from \"./Options/Interfaces/Interactivity/IInteractivity\";\nexport * from \"./Options/Interfaces/Motion/IMotion\";\nexport * from \"./Options/Interfaces/Motion/IMotionReduce\";\nexport * from \"./Options/Interfaces/Particles/Bounce/IParticlesBounce\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisions\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisionsOverlap\";\nexport * from \"./Options/Interfaces/Particles/IParticlesOptions\";\nexport * from \"./Options/Interfaces/Particles/IShadow\";\nexport * from \"./Options/Interfaces/Particles/IStroke\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAttract\";\nexport * from \"./Options/Interfaces/Particles/Move/IMove\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAngle\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveGravity\";\nexport * from \"./Options/Interfaces/Particles/Move/Path/IMovePath\";\nexport * from \"./Options/Interfaces/Particles/Move/IOutModes\";\nexport * from \"./Options/Interfaces/Particles/Move/ISpin\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveTrail\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesDensity\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesNumber\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacity\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacityAnimation\";\nexport * from \"./Options/Interfaces/Particles/Rotate/IRotate\";\nexport * from \"./Options/Interfaces/Particles/Rotate/IRotateAnimation\";\nexport * from \"./Options/Interfaces/Particles/Shape/ICharacterShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IImageShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IPolygonShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShapeValues\";\nexport * from \"./Options/Interfaces/Particles/Shape/IStarShape\";\nexport * from \"./Options/Interfaces/Particles/Size/ISize\";\nexport * from \"./Options/Interfaces/Particles/Size/ISizeAnimation\";\nexport * from \"./Options/Interfaces/Particles/ZIndex/IZIndex\";\nexport * from \"./Options/Interfaces/Theme/ITheme\";\nexport * from \"./Options/Interfaces/Theme/IThemeDefault\";\nexport * from \"./Types/RangeValue\";\nexport * from \"./Types/RecursivePartial\";\nexport * from \"./Types/ShapeData\";\nexport * from \"./Types/ShapeDrawerFunctions\";\nexport * from \"./Types/SingleOrMultiple\";\nexport * from \"./Types/PathOptions\";\nexport * from \"./Utils/CanvasUtils\";\nexport * from \"./Utils/ColorUtils\";\nexport * from \"./Utils/HslColorManager\";\nexport * from \"./Utils/NumberUtils\";\nexport * from \"./Utils/OptionsUtils\";\nexport * from \"./Utils/RgbColorManager\";\nexport * from \"./Utils/Utils\";\nexport { tsParticles };\n", "import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n", "import d from \"./node_modules/react-tsparticles/esm/index.js\";export default d;\nexport * from \"./node_modules/react-tsparticles/esm/index.js\""],
  "mappings": "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",
  "names": ["require_react", "equal", "_a", "trail", "theme", "import_react", "Particles", "equal", "React", "container", "Particles"]
}
